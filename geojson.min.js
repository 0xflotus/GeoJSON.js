// geojson.js - v0.4.0
// (c) 2016 Casey Thomas, MIT License 
!function(a){function b(){var a=1<=arguments.length?[].slice.call(arguments,0):[],b=a.shift(),c=a.shift();Error.apply(this,a),this.message=this.message||"Invalid Geometry: item: "+JSON.stringify(b)+", params: "+JSON.stringify(c)}function c(a,b){var c=a||{};for(var d in b)b.hasOwnProperty(d)&&!c[d]&&(c[d]=b[d]);return c}function d(b){if(!b)return a.defaultsOptions;var c=b.options;return delete b.options,c||a.defaultsOptions}function e(a,b){if(b.crs&&f(b.crs)&&(a.crs=b.crs),b.bbox&&(a.bbox=b.bbox),b.extraGlobal){a.properties={};for(var c in b.extraGlobal)a.properties[c]=b.extraGlobal[c]}}function f(a){if("name"===a.type){if(a.properties&&a.properties.name)return!0;throw new Error('Invalid CRS. Properties must contain "name" key')}if("link"===a.type){if(a.properties&&a.properties.href&&a.properties.type)return!0;throw new Error('Invalid CRS. Properties must contain "href" and "type" key')}throw new Error('Invald CRS. Type attribute must be "name" or "link"')}function g(a){a.geom={};for(var b in a)a.hasOwnProperty(b)&&-1!==n.indexOf(b)&&(a.geom[b]=a[b],delete a[b]);h(a.geom)}function h(a){for(var b in a)a.hasOwnProperty(b)&&("string"==typeof a[b]?o.push(a[b]):"object"==typeof a[b]&&(o.push(a[b][0]),o.push(a[b][1])));if(0===o.length)throw new Error("No geometry attributes specified")}function i(a){var b=a.item,c=a.params,d=a.options,e=a.propFunc,f={type:"Feature"};return f.geometry=k({item:b,params:c,options:d}),f.properties=e.call(b),f}function j(a){return/^.+\..+$/.test(a)}function k(c){var d=c.item,e=c.params,f=c.options,g={};for(var h in e.geom){var i=e.geom[h];if("string"==typeof i&&d.hasOwnProperty(i))"GeoJSON"===h?g=d[i]:(g.type=h,g.coordinates=d[i]);else if("object"!=typeof i||Array.isArray(i)){if(Array.isArray(i)&&d.hasOwnProperty(i[0])&&d.hasOwnProperty(i[1]))g.type=h,g.coordinates=[Number(d[i[1]]),Number(d[i[0]])];else if(Array.isArray(i)&&j(i[0])&&j(i[1])){for(var l=[],m=0;m<i.length;m++){for(var n=i[m].split("."),o=d,p=0;p<n.length;p++){if(!o.hasOwnProperty(n[p]))return!1;o=o[n[p]]}l[m]=o}g.type=h,g.coordinates=[Number(l[1]),Number(l[0])]}}else{var q=Object.keys(i).map(function(a){var b=i[a],c=d[a];return k({item:c,params:{geom:{Point:b}},options:f})});g.type=h,g.coordinates=[].concat(q.map(function(a){return a.coordinates}))}}if(f.doThrow&&!a.isGeometryValid(g))throw new b(d,e);return g}function l(a){var b;return a.exclude||a.include?a.include?b=function(b){a.include.forEach(function(a){b[a]=this[a]},this)}:a.exclude&&(b=function(b){for(var c in this)this.hasOwnProperty(c)&&-1===o.indexOf(c)&&-1===a.exclude.indexOf(c)&&(b[c]=this[c])}):b=function(a){for(var b in this)this.hasOwnProperty(b)&&-1===o.indexOf(b)&&(a[b]=this[b])},function(){var c={};return b.call(this,c),a.extra&&m(c,a.extra),c}}function m(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a}a.version="0.4.0",a.defaults={},a.defaultsOptions={doThrow:!1},b.prototype=Error,a.errors={InvalidGeometryError:b},a.isGeometryValid=function(a){return a&&Object.keys(a).length?!!a.type&&!!a.coordinates&&Array.isArray(a.coordinates)&&!!a.coordinates.length:!1},a.parse=function(a,b,f){var h,j,k=c(b,this.defaults),m=d(b);return o.length=0,g(k),j=l(k),Array.isArray(a)?(h={type:"FeatureCollection",features:[]},a.forEach(function(a){h.features.push(i({item:a,params:k,propFunc:j,options:m}))}),e(h,k)):h=i({item:a,params:k,propFunc:j,options:m}),f&&"function"==typeof f?void f(h):h};var n=["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeoJSON"],o=[]}("object"==typeof module?module.exports:window.GeoJSON={});